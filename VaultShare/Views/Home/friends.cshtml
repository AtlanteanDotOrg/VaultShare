<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">

    <style>
        body {
            background-color: #F8C471; 
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box; 
        }

        .flex-container {
            display: flex;
            justify-content: center; 
            gap: 50px; 
            height: 600px;
            width: 100%; 
            max-width: 1500px;
            margin: 50px auto;
            position: relative;
            left: 310px;
        }

        .friends-box1, .friends-box2 {
            flex: 1; 
            padding: 20px; 
            border: 1px solid #ccc; 
            border-radius: 10px;
            background-color: white; 
        }

        .friends-box1 {
            flex-grow: 5;
            width: 300px;
        }

        .friends-box2 {
            flex-grow: 3; 
            width: 400px;
        }

        .search-bar {
            display: flex;
            align-items: center;
            border-radius: 10px;
            overflow: hidden;
            border: 1px solid #ccc;
            background-color: #A9A9A9;
            margin-bottom: 10px;
        }

        .search-bar input {
            flex: 1;
            border: none;
            padding: 10px;
            background-color: #A9A9A9;
        }

        .search-bar button {
            margin-left: 5px;
            border: none;
            background-color: #A9A9A9;
        }

        .friends-grid {
            display: flex;
            flex-wrap: wrap; 
            justify-content: center;
            gap: 10px;
            width: 100%; 
        }

        .search-friends { 
            width: 200px;
            height: 150px; 
            display: flex;
            flex-direction: column; 
            justify-content: center; 
            background-color: #F0F0F0; 
            color: white; 
            border-radius: 8px;
            font-size: 16px; 
            padding: 10px;
            align-items: center;
        }

        .search-friends p {
            margin: 0;
            color: black;
        }

        .profile-pic {
            width: 40px; 
            height: 40px; 
            object-fit: cover; 
        }

        .profile-pic img {
            width: 100%; 
            height: 100%;
            border-radius: 50%; 
            object-fit: cover;
        }

        .add-button {
            background-color: #6C3483;
            color: white;
            border: none;
            padding: 5px 10px;
            border-radius: 5px;
            cursor: pointer;
            margin-top: 5px;
        }

        .add-button:hover {
            background-color: #5A2D71; 
        }

    </style>
</head>
<body>
    <br><br>
    <div class="flex-container">
        <div class="friends-box1">
            <div class="friends-section">
                <h5>Friends</h5>
                @if (Model != null && Model.Any())
                {
                    <div class="card-container">
                        @foreach (var friend in Model)
                        {
                            <div class="friend-card">
                                <img src="path-to-avatar.png" alt="@friend.Name">
                                <h6>@friend.Name</h6>
                                <p>@friend.Username</p>
                                <small>Group: @friend.Group</small>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <p>No friends available.</p> 
                }
            </div>
        </div>
        <div class="friends-box2">
            <div class="mb-3">
                <h5>Find Friends</h5>
                <div class="search-bar">
                    <input type="text" id="friend-search" class="form-control" placeholder="Search for a friend">
                    <button id="search-button">&#128269;</button>
                </div>
                <div class="friends-grid" id="friends-grid">
                    <!-- Potential friends will be dynamically loaded here -->
                </div>
            </div>
        </div>
    </div>

    <script>
    document.addEventListener("DOMContentLoaded", function() {
        const googleId = "@ViewData["GoogleId"]";
        console.log("Page loaded - Google ID:", googleId);

        if (googleId) {
            fetchPotentialFriends(googleId);
        } else {
            console.error("Google ID is not available on the page.");
        }

        async function fetchPotentialFriends(googleId) {
            try {
                console.log("Fetching potential friends for Google ID:", googleId);
                const response = await fetch(`/api/payment/potential-friends/${googleId}`);
                console.log("Fetch response status:", response.status);
                
                if (response.ok) {
                    const potentialFriends = await response.json();
                    console.log("Potential friends data received:", potentialFriends);
                    displayPotentialFriends(potentialFriends);
                } else {
                    console.error("Failed to fetch potential friends. Status:", response.status);
                }
            } catch (error) {
                console.error("Error fetching potential friends:", error);
            }
        }

        function displayPotentialFriends(friends) {
            const friendsGrid = document.getElementById("friends-grid");
            friendsGrid.innerHTML = ""; // Clear any existing entries
            console.log("Displaying potential friends...");

            friends.forEach(friend => {
                console.log("Rendering friend:", friend.name, "ID:", friend.id);

                const friendDiv = document.createElement("div");
                friendDiv.classList.add("search-friends");

                friendDiv.innerHTML = `
                    <div class="profile-pic">
                        <img src="https://via.placeholder.com/40" alt="Profile Picture">
                    </div>
                    <p>${friend.name}</p>
                    <p style="color: #787878; font-size: 12px;">#${friend.email}</p>
                    <button class="add-button" onclick="addFriend('${friend.id}')">Add</button>
                `;

                friendsGrid.appendChild(friendDiv);
            });
        }


    });
            // Implementing the addFriend function
        async function addFriend(friendId) {
            console.log("Adding friend with ID:", friendId);
            
            try {
                const response = await fetch(`/api/payment/add-friend`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ friendId })
                });

                if (response.ok) {
                    console.log("Friend added successfully!");
                } else {
                    console.error("Failed to add friend. Status:", response.status);
                }
            } catch (error) {
                console.error("Error adding friend:", error);
            }
        }
</script>
</body>
</html>

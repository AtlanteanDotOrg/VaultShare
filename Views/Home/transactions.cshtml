@model IEnumerable<TransactionModel>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <title>VaultShare - Recent Transactions</title>
    <style>
        body { background-color: #F8C471; }
        .transactions-page {
            display: flex;
            justify-content: center;
            align-items: center;
            height: calc(100vh - 90px);
        }
        .transactions-container {
            background-color: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
            margin: auto;
            width: 80%;
            margin-top: 80px;
        }
        .transaction-row {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 10px 0;
            border-bottom: 1px solid #E0E0E0;
        }
        .transaction-row:last-child { border-bottom: none; }
        .transaction-details {
            display: flex;
            align-items: center;
            flex-grow: 1; 
            margin-left: 10px;
        }
        .hidden-buttons {
            visibility: hidden;
        }

        .transaction-row {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 10px 0;
            border-bottom: 1px solid #E0E0E0;
        }

        .transaction-row:last-child { 
            border-bottom: none; 
        }

        .transaction-details {
            display: flex;
            align-items: center;
            flex-grow: 1;
            margin-left: 10px;
        }

        .description {
            text-align: center;
            flex-grow: 1;
            overflow: hidden;
            white-space: nowrap;
            text-overflow: ellipsis;
            display: flex;
            justify-content: center;
        }

        .amount {
            width: 100px;
            text-align: right;
        }

        .amount-positive { color: #27AE60; }
        .amount-negative { color: #E74C3C; }

        .approve-deny-buttons {
            display: flex;
            gap: 5px;
            position: relative;
            left: 20px;
        }

        .btn-approve {
            background-color: #27AE60;
            color: white;
            border: none;
        }

        .btn-deny {
            background-color: #E74C3C;
            color: white;
            border: none;
        }
        .transactions-container img {
            width: 35px;
            height: 35px;
            border-radius: 50%;
            object-fit: cover;
        }
        h2 {
            text-align: center;
            position: relative;
        }
    </style>
</head>
<body>
    <div class="transactions-page">
        <br><br><br>
        <div class="transactions-container">
            <h2>Recent Transactions</h2>

        @foreach (var transaction in Model)
        {
            <div class="transaction-row">
                <img src="@transaction.ImageUrl" alt="Profile Picture" class="rounded-circle" height="30">
                <div class="transaction-details">
                    <span class="description" style="position: relative; left: 60px">@transaction.Description</span>

                    <!-- Debugging line to check amount -->
                    <div class="approve-deny-buttons @(transaction.Amount < 0 ? "" : "hidden-buttons")">
                        <button class="btn btn-approve btn-sm">Approve</button>
                        <button class="btn btn-deny btn-sm">Deny</button>
                    </div>

                    <!-- Amount display with color -->
                <span class="amount @(transaction.Amount < 0 ? "amount-negative" : "amount-positive")">
                    @if (transaction.Amount < 0) {
                        @("-" + transaction.Amount.ToString("C").Replace("(", "").Replace(")", ""))
                    } else {
                        @transaction.Amount.ToString("C")
                    }
                </span>
                </div>
            </div>
        }

        </div>
    </div>
</body>
</html>

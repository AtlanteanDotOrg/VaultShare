<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #F8C471;
        }
        .friends-page {
            display: flex;
            justify-content: center;
            align-items: center;
            height: calc(100vh - 90px);
        }
        .flex-container {
            display: flex;
            justify-content: center;
            gap: 50px;
            height: 600px;
            width: 100%;
            max-width: 1500px;
            position: relative;
        }
        .friends-box1, .friends-box2 {
            flex: 1;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 10px;
            background-color: white;
        }
        .friends-box1 {
            flex-grow: 5;
            width: 300px;
        }
        .friends-box2 {
            flex-grow: 3;
            width: 400px;
        }
        .search-bar {
            display: flex;
            align-items: center;
            border-radius: 10px;
            overflow: hidden;
            border: 1px solid #ccc;
            background-color: #A9A9A9;
            margin-bottom: 10px;
        }
        .search-bar input {
            flex: 1;
            border: none;
            padding: 10px;
            background-color: #A9A9A9;
        }
        .search-bar button {
            margin-left: 5px;
            border: none;
            background-color: #A9A9A9;
        }
        .friends-grid {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            gap: 10px;
            width: 100%;
        }
        .search-friends {
            width: 200px;
            height: 150px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            background-color: #F0F0F0;
            color: black;
            border-radius: 8px;
            font-size: 16px;
            padding: 10px;
            align-items: center;
        }
        .search-friends p {
            margin: 0;
            color: black;
        }
        .profile-pic {
            width: 40px;
            height: 40px;
            object-fit: cover;
        }
        .profile-pic img {
            width: 100%;
            height: 100%;
            border-radius: 50%;
            object-fit: cover;
        }
        .add-button {
            background-color: #6C3483;
            color: white;
            border: none;
            padding: 5px 10px;
            border-radius: 5px;
            cursor: pointer;
            margin-top: 5px;
        }
        .add-button:hover {
            background-color: #5A2D71;
        }
    </style>
</head>
<body>
<div class="friends-page">
    <div class="flex-container">
        <div class="friends-box1">
            <div class="friends-section">
                <h5>Friends</h5>
                <div class="card-container" id="friends-box1">
                    <!-- Friends will be dynamically added here -->
                </div>
            </div>
        </div>
        <div class="friends-box2">
            <div class="mb-3">
                <h5>Find Friends</h5>
                <div class="friends-grid" id="friends-grid">
                    <!-- Potential friends will be dynamically loaded here -->
                </div>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener("DOMContentLoaded", function() {
    const googleId = "@ViewData["GoogleId"]";
    console.log("Page loaded - Google ID:", googleId);

    if (googleId) {
        fetchPotentialFriends(googleId);
    } else {
        console.error("Google ID is not available on the page.");
    }

    async function fetchPotentialFriends(googleId) {
        try {
            console.log("Fetching potential friends for Google ID:", googleId);
            const response = await fetch(`/api/payment/potential-friends/${googleId}`);
            console.log("Fetch response status:", response.status);

            if (response.ok) {
                const potentialFriends = await response.json();
                console.log("Potential friends data received:", potentialFriends);
                displayPotentialFriends(potentialFriends);
            } else {
                console.error("Failed to fetch potential friends. Status:", response.status);
            }
        } catch (error) {
            console.error("Error fetching potential friends:", error);
        }
    }

    window.displayPotentialFriends = function(friends) {
        const friendsGrid = document.getElementById("friends-grid");
        friendsGrid.innerHTML = ""; // Clear any existing entries
        console.log("Displaying potential friends...");

        const limitedFriends = friends.slice(0, 3);
        console.log("Limited to first 4 friends:", limitedFriends);

        limitedFriends.forEach(friend => {
            console.log("Rendering friend:", friend.name, "ID:", friend.id);

            const friendDiv = document.createElement("div");
            friendDiv.classList.add("search-friends");

            friendDiv.innerHTML = `
                <div class="profile-pic">
                    <img src="https://sm.ign.com/ign_il/cover/k/kirby-for-/kirby-for-nintendo-switch_kxmv.jpg" alt="Profile Picture">
                </div>
                <p>${friend.name}</p>
                <p style="color: black; font-size: 12px;">#${friend.email}</p>
                <button class="add-button" onclick="handleAddFriend('${friend.id}', '${friend.name}', '${friend.username}', '${friend.email}')">Add</button>
            `;

            friendsGrid.appendChild(friendDiv);
        });
    }

    window.handleAddFriend = async function(friendId, name, username, email) {
        console.log("Handling add friend for ID:", friendId);

        try {
            const response = await fetch(`/api/payment/add-friend`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ friendId })
            });

            if (response.ok) {
                console.log("Friend added successfully!");
                alert("Friend added successfully!"); // Popup for success

                // Add the friend to friends-box1
                const friendCard = document.createElement("div");
                friendCard.classList.add("search-friends");

                friendCard.innerHTML = `
                    <div class="profile-pic">
                        <img src="https://sm.ign.com/ign_il/cover/k/kirby-for-/kirby-for-nintendo-switch_kxmv.jpg" alt="${name}">
                    </div>
                    <p>${name}</p>
                    <p style="color: #787878; font-size: 12px;">${username}</p>
                    <small style="color: black;">#${email}</small>
                `;

                const friendsBox1 = document.getElementById("friends-box1");
                friendsBox1.appendChild(friendCard);
            } else {
                console.error("Failed to add friend. Status:", response.status);
                alert("Failed to add friend. Please try again."); 
            }
        } catch (error) {
            console.error("Error adding friend:", error);
            alert("An error occurred while adding the friend. Please try again.");
        }
    }
});

</script>
</body>
</html>
